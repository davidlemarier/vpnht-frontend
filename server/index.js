// Generated by CoffeeScript 1.8.0
(function() {
  "use strict";
  var MongoStore, app, bodyParser, compress, cookieParser, cors, corsOptions, errorHandler, express, expressValidator, favicon, flash, lodash, logger, mongoose, passport, passportMiddleware, path, routes, secrets, session, staticDir, subdomainOffset, swig, viewHelper;

  express = require("express");

  swig = require("swig");

  subdomainOffset = process.env.SUBDOMAIN_OFFSET || 0;

  secrets = require("./config/secrets");

  path = require("path");

  favicon = require("serve-favicon");

  logger = require("morgan");

  cookieParser = require("cookie-parser");

  session = require("express-session");

  MongoStore = require("connect-mongo")({
    session: session
  });

  mongoose = require("mongoose");

  passport = require("passport");

  bodyParser = require("body-parser");

  compress = require("compression");

  lodash = require("lodash");

  compress = compress();

  expressValidator = require("express-validator");

  errorHandler = require("./middleware/error");

  viewHelper = require("./middleware/view-helper");

  flash = require("express-flash");

  cors = require("cors");

  corsOptions = {
    origin: "*"
  };

  staticDir = void 0;

  console.log(secrets);

  mongoose.connect(secrets.db);

  mongoose.connection.on("error", function() {
    console.error("MongoDB Connection Error. Make sure MongoDB is running.");
  });

  corsOptions = {
    origin: "*"
  };

  app = express();

  if (app.get("env") === "production") {
    app.locals.production = true;
    swig.setDefaults({
      cache: "memory"
    });
    staticDir = path.join(__dirname + "/../public");
  } else {
    app.locals.production = false;
    swig.setDefaults({
      cache: false
    });
    staticDir = path.join(__dirname + "/../public");
  }

  app.engine("html", swig.renderFile);

  app.set("views", path.join(__dirname, "views"));

  app.set("view engine", "html");

  app.locals._ = lodash;

  app.locals.stripePubKey = secrets.stripeOptions.stripePubKey;

  app.use(favicon(path.join(__dirname + "/../public/favicon.ico")));

  app.use(logger("dev"));

  app.use(compress);

  app.use(bodyParser());

  app.use(expressValidator());

  app.use(cookieParser());

  app.use(express["static"](staticDir));

  if (app.get("env") !== "production") {
    app.use("/styles", express["static"](__dirname + "/../.tmp/styles"));
  }

  app.use(session({
    resave: true,
    saveUninitialized: true,
    cookie: {
      maxAge: 60 * 1000
    },
    secret: secrets.sessionSecret,
    store: new MongoStore({
      url: secrets.db,
      auto_reconnect: true
    })
  }));

  app.use(passport.initialize());

  app.use(passport.session());

  app.use(flash());

  app.use(cors(corsOptions));

  passportMiddleware = require("./middleware/passport");

  passportMiddleware(passport);

  app.use(viewHelper);

  routes = require("./routes");

  routes(app, passport);

  app.use(errorHandler.notFound);

  if (app.get("env") === "development") {
    app.use(errorHandler.development);
  } else {
    app.use(errorHandler.production);
  }

  module.exports = app;

}).call(this);
