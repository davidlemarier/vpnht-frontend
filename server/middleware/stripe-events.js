// Generated by CoffeeScript 1.8.0
(function() {
  "use strict";
  var User, api, knownEvents, mailgunApiTransport, moment, nodemailer, restify, secrets, txn;

  User = require("../models/user");

  secrets = require("../config/secrets");

  restify = require("restify");

  nodemailer = require("nodemailer");

  mailgunApiTransport = require("nodemailer-mailgunapi-transport");

  moment = require("moment");

  api = require("../middleware/api");

  txn = require("../middleware/txn");

  knownEvents = {
    "invoice.payment_succeeded": function(req, res, next) {
      var lastLine;
      console.log(req.stripeEvent.type + ": event processed");
      lastLine = req.stripeEvent.data.object.lines.data.length - 1;
      console.log(lastLine);
      console.log(req.stripeEvent.data.object.lines.data[lastLine]);
      if (req.stripeEvent.data && req.stripeEvent.data.object && req.stripeEvent.data.object.customer) {
        return api.activate(req.stripeEvent.data.object.customer, req.stripeEvent.data.object.lines.data[lastLine].plan.name.toLowerCase(), 'stripe', function(err, success) {
          if (err) {
            return next(err);
          }
          return res.status(200).end();
        });
      } else {
        return next(new Error("stripeEvent.data.object.customer is undefined"));
      }
    },
    "customer.subscription.deleted": function(req, res, next) {
      console.log(req.stripeEvent.type + ": event processed");
      if (req.stripeEvent.data && req.stripeEvent.data.object && req.stripeEvent.data.object.customer) {
        return User.findOne({
          "stripe.customerId": req.stripeEvent.data.object.customer
        }, function(err, user) {
          if (err) {
            return next(err);
          }
          if (!user) {
            return res.status(200).end();
          } else {
            user.stripe.last4 = "";
            user.stripe.plan = "free";
            user.stripe.subscriptionId = "";
            return user.save(function(err) {
              if (err) {
                return next(err);
              }
              console.log("user: " + user.email + " subscription was successfully cancelled.");
              return res.status(200).end();
            });
          }
        });
      } else {
        return next(new Error("stripeEvent.data.object.customer is undefined"));
      }
    }
  };

  module.exports = function(req, res, next) {
    if (req.stripeEvent && req.stripeEvent.type && knownEvents[req.stripeEvent.type]) {
      knownEvents[req.stripeEvent.type](req, res, next);
    } else {
      next(new Error("Stripe Event not found"));
    }
  };

}).call(this);
